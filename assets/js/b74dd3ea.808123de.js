"use strict";(self.webpackChunkorca_docs=self.webpackChunkorca_docs||[]).push([[127],{998:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={sidebar_position:3,id:"project-structure"},s="Project Structure",p={unversionedId:"getting-started/project-structure",id:"getting-started/project-structure",isDocsHomePage:!1,title:"Project Structure",description:"The Orca app is a monorepo using Lerna and Yarn Workspaces.",source:"@site/docs/getting-started/Project Structure.md",sourceDirName:"getting-started",slug:"/getting-started/project-structure",permalink:"/docs/getting-started/project-structure",editUrl:"https://github.com/dimimikadze/getorca.org/edit/main/docs/getting-started/Project Structure.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"project-structure"},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/getting-started/configuration"},next:{title:"Production Mode",permalink:"/docs/deployment/production-mode"}},c=[],u={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"project-structure"},"Project Structure"),(0,r.kt)("p",null,"The Orca app is a monorepo using ",(0,r.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},"Lerna")," and Yarn ",(0,r.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/en/docs/workspaces/"},"Workspaces"),"."),(0,r.kt)("p",null,"In this section, we'll describe the files and folders the newly created app contains."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"my-app\n\u251c\u2500\u2500 .prettierrc\n\u251c\u2500\u2500 lerna.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 pm2.config.js\n\u2514\u2500\u2500 packages\n    \u2514\u2500\u2500 orca-api\n    |   \u251c\u2500\u2500 .env\n    |   \u251c\u2500\u2500 .eslintrc\n    |   \u251c\u2500\u2500 createSuperAdmin.js\n    |   \u251c\u2500\u2500 package.json\n    |   \u251c\u2500\u2500 tsconfig.json\n    |   \u2514\u2500\u2500 src\n    |       \u2514\u2500\u2500 constants\n    |       \u251c\u2500\u2500 controllers\n    |       \u251c\u2500\u2500 db\n    |       \u251c\u2500\u2500 models\n    |       \u251c\u2500\u2500 utils\n    |       \u251c\u2500\u2500 authentication.ts\n    |       \u251c\u2500\u2500 index.ts\n    |       \u251c\u2500\u2500 routes.ts\n    |       \u2514\u2500\u2500 socket.ts\n    \u2514\u2500\u2500 orca-frontend\n        \u251c\u2500\u2500 components\n        \u251c\u2500\u2500 constants\n        \u251c\u2500\u2500 pages\n        \u251c\u2500\u2500 public\n        \u251c\u2500\u2500 store\n        \u251c\u2500\u2500 utils\n        \u251c\u2500\u2500 .eslintrc.json\n        \u251c\u2500\u2500 package.json\n        \u251c\u2500\u2500 theme.ts\n        \u2514\u2500\u2500  tsconfig.json\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".husky")," A hook for checking Typescript and ESLint errors before committing to Git."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".prettierrc")," Prettier configuration file. ",(0,r.kt)("a",{parentName:"li",href:"https://prettier.io/"},"Prettier")," ensures that the code is formatted in a consistent style across the app."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"lerna.json")," Lerna configuration file. ",(0,r.kt)("a",{parentName:"li",href:"https://lerna.js.org/"},"Lerna")," is used for managing multiple packages."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," The root package.json file containing the root development dependencies and scripts for running multiple packages."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pm2.config.js")," ",(0,r.kt)("a",{parentName:"li",href:"https://pm2.keymetrics.io/"},"PM2")," configuration file. PM2 is a process manager for Node.js, and we use it for running the app in production mode.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"packages")," A folder containing API and Front-end packages.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"api")," An ",(0,r.kt)("a",{parentName:"li",href:"https://expressjs.com/"},"Express")," web server exposing Rest API endpoints.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".env")," Environmental variable definitions for the API package."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".eslintrc")," ESLint configuration file for the API package."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createSuperAdmin.js")," A helper file for creating super admin users through the command line."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," API's package.json file, containing all the required dependencies and the NPM scripts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," Typescript configuration file for the API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"src")," A folder containing all the Typescript application code that transpile to Javascript for the production environment.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"constants")," Shared constant variables for the API package."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"controllers")," A folder containing all the API controllers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"db")," A folder containing all the functions for interacting with the MongoDB database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"models")," Definitions of the ",(0,r.kt)("a",{parentName:"li",href:"https://mongoosejs.com/"},"Mongoose")," Schema and Models."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"utils")," Different types of utility functions for the API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"authentication.ts")," A file containing ",(0,r.kt)("a",{parentName:"li",href:"http://www.passportjs.org/"},"Passport")," middlewares for authentication and authorization."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"index.ts")," Configuration file for the Express framework."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"routes")," Configuration for all the API endpoints."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"socket.ts")," ",(0,r.kt)("a",{parentName:"li",href:"https://socket.io/"},"Socket.io")," server configuration with its listeners and events."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"frontend")," A ",(0,r.kt)("a",{parentName:"li",href:"https://nextjs.org/"},"Next.js")," React application.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"components")," React components containing UI library."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"constants")," Shared constant variables for the Front-end package."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pages")," React components associated with specific routes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"public")," A folder for hosting static files."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"store")," ",(0,r.kt)("a",{parentName:"li",href:"https://redux.js.org/"},"Redux")," store implementation using ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/erikras/ducks-modular-redux"},"Duck")," pattern."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"utils")," Different types of utility functions for the Front-end."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".eslintrc.json")," ESLint configuration file for the Front-end package."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," Front-end's package.json file, containing all the required dependencies and the NPM scripts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"theme.ts")," A file containing all the design tokens for constructing consistent UI across the app."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," Typescript configuration file for the Front-end.")))))))))}d.isMDXComponent=!0}}]);